---
import { getCollection } from "astro:content";

// get all experiences and sort them by start date
const experiences = await getCollection("experience");
const sortedExperiences = experiences.sort((a, b) => a.data.start < b.data.start ? 1 : -1);

// get data for the curved path
const pathHeight = 250 * experiences.length;
const pathWidth = 30;

const curveness = 20 * experiences.length;
// math function to map a percent to a curved position
// this doesn't affect performance as it's generated at build time
const getCurvedPosition = (percent: number) => {
    return {
        x: 0.6*pathWidth*(Math.sin(percent*curveness) * 0.5 + 0.5),
        y: pathHeight * percent
    }
}

// sinusoidal path using SVG path
const start = getCurvedPosition(0);
let path = "M " + start.x + " " + start.y;
for (let i = 0; i <= 100 * experiences.length; i++) {
    const { x, y } = getCurvedPosition(i / 200);
    path += " L " + x + " " + y;
}
---

<h2>Cursus</h2>
<div class="cursus">
    <svg width={pathWidth+4} height={pathHeight} viewBox={`-2 0 ${pathWidth+2} ${pathHeight}`} xmlns="http://www.w3.org/2000/svg">
        <!-- curved path -->
        <path class="curve" d={path} />
    </svg>
    <!-- experiences -->
    <div class="experiences" style={{height: pathHeight + "px"}}>
        {sortedExperiences.map((experience, i) => {
            const percent = i / (sortedExperiences.length - 1);
            // get the position on the curved path
            const { x, y } = getCurvedPosition(percent);
            const start = new Date(experience.data.start).toLocaleDateString(undefined, { month: 'short', day: 'numeric', year: 'numeric' });
            const end = experience.data.end ? new Date(experience.data.end).toLocaleDateString(undefined, { month: 'short', day: 'numeric', year: 'numeric' }) : "today";
            const lineLength = 70 - x;
            // make the experience line and dot positioned on the path
            return (
                <div class="experience">
                    <div class="line" style={`left: ${x}px; top: ${y}px; width: ${lineLength}px;`} />
                    <div class="circle" style={`left: ${x}px; top: ${y}px`} />
                    <div class="content" style={`top: ${y - 16}px`}>
                        <h3>{experience.data.title}</h3>
                        <p>{start} - {end}</p>
                        <p class="description">{experience.data.description}</p>
                    </div>
                </div>
            )
        })}
    </div>
</div>

<script>
    import '../../scripts/cursus';
</script>

<style>
    h2 {
        text-align: center;
        margin: 3rem 0;
    }
    .cursus {
        max-width: 30rem;
        margin: auto;
        padding: 1rem;
        margin-bottom: 40vh;
        margin-top: 20vh;
    }

    svg {
        fill: none;
        stroke: var(--text-color);
        stroke-width: var(--line-width);
        position: absolute;
    }

    .experiences {
        position: relative;
    }

    .line {
        position: absolute;
        height: 1px;
        background-color: var(--text-color);
    }

    .circle {
        position: absolute;
        width: 12px;
        height: 12px;
        background-color: var(--tertiary-color);
        border-radius: 50%;
        transform: translate(-30%, -50%);
    }

    .content {
        position: absolute;
        left: 80px;
        max-width: 20rem;
    }

    .content h3 {
        font-family: 'Lora', serif;
        text-transform: uppercase;
        font-weight: 300;
    }
    
    .content .description {
        margin-top: 1rem;
        font-size: 0.9rem;
    }
</style>