---
import { getCollection } from "astro:content";

const pathHeight = 500;
const pathWidth = 30;
let path = `M ${pathWidth/2} 0`;

const curveness = 50;
const getCurvedPosition = (percent: number) => {
    return {
        x: 0.6*pathWidth*(Math.sin(percent*curveness) * 0.5 + 0.5),
        y: pathHeight * percent
    }
}

// sinusoide shape
for (let i = 0; i <= 200; i++) {
    const { x, y } = getCurvedPosition(i / 200);
    path += " L " + x + " " + y;
}

const experiences = await getCollection("experience");
const sortedExperiences = experiences.sort((a, b) => a.data.start > b.data.start ? 1 : -1);
---

<div class="cursus">
    <svg width={pathWidth+4} height={pathHeight} viewBox={`-2 0 ${pathWidth+2} ${pathHeight}`} xmlns="http://www.w3.org/2000/svg">
        <path d={`M 0 0 L ${pathWidth} 0`} />
        <path d={path} />
        <path d={`M 0 ${pathHeight} L ${pathWidth} ${pathHeight}`} />
    </svg>
    <div class="experiences" style={{height: pathHeight + "px"}}>
        {sortedExperiences.map((experience, i) => {
            const percent = i / (sortedExperiences.length - 1);
            const { x, y } = getCurvedPosition(percent);
            const start = new Date(experience.data.start).toLocaleDateString();
            const end = experience.data.end ? new Date(experience.data.end).toLocaleDateString() : "now";
            const lineLength = 100 - x;
            return (
                <div class="experience">
                    <div class="line" style={`left: ${x}px; top: ${y}px; width: ${lineLength}`} />
                    <div class="circle" style={`left: ${x}px; top: ${y}px`} />
                    <div class="content" style={`top: ${y - 16}px`}>
                        <h3>{experience.data.title}</h3>
                        <p>{start} - {end}</p>
                        <p>{experience.data.description}</p>
                    </div>
                </div>
            )
        })}
    </div>
</div>

<style>
    .cursus {
        max-width: 50rem;
        margin: auto;
        padding: 1rem;
    }

    svg {
        fill: none;
        stroke: black;
        stroke-width: var(--line-width);
        position: absolute;
    }

    .experiences {
        position: relative;
    }

    .line {
        position: absolute;
        height: 1px;
        background-color: black;
    }

    .circle {
        position: absolute;
        width: 10px;
        height: 10px;
        background-color: black;
        border-radius: 50%;
        transform: translate(-50%, -50%);
    }

    .content {
        position: absolute;
        left: 100px;
        max-width: 20rem;
    }
    
</style>